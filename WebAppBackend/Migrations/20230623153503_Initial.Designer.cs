// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebAppBackend.Context;

#nullable disable

namespace WebAppBackend.Migrations
{
    [DbContext(typeof(SNSYSContext))]
    [Migration("20230623153503_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebAppBackend.Entidades.Acesso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Permissao")
                        .HasColumnType("integer");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Acessos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2023, 6, 23, 12, 35, 2, 769, DateTimeKind.Local).AddTicks(2025),
                            Permissao = 1,
                            UsuarioId = 2
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2023, 6, 23, 12, 35, 2, 769, DateTimeKind.Local).AddTicks(2033),
                            Permissao = 4,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2023, 6, 23, 12, 35, 2, 769, DateTimeKind.Local).AddTicks(2034),
                            Permissao = 3,
                            UsuarioId = 1
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2023, 6, 23, 12, 35, 2, 769, DateTimeKind.Local).AddTicks(2035),
                            Permissao = 2,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("WebAppBackend.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UsuarioAtualizacaoId")
                        .HasColumnType("integer");

                    b.Property<int?>("UsuarioInclusaoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("tb_customer", (string)null);
                });

            modelBuilder.Entity("WebAppBackend.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2023, 6, 23, 12, 35, 2, 760, DateTimeKind.Local).AddTicks(1203),
                            Login = "admin",
                            Password = "Rhdfgr7OscxrawPdlBXN+2lDMfPPIdO0UOb8LlLjFEA="
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2023, 6, 23, 12, 35, 2, 769, DateTimeKind.Local).AddTicks(1729),
                            Login = "guest",
                            Password = "rYpC71w5Vjag0Qc481ASMzGXzKTB9VoZMz9w2Wyo4B4="
                        });
                });

            modelBuilder.Entity("WebAppBackend.Entidades.Acesso", b =>
                {
                    b.HasOne("WebAppBackend.Entidades.Usuario", "Usuario")
                        .WithMany("Acessos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("WebAppBackend.Entidades.Usuario", b =>
                {
                    b.Navigation("Acessos");
                });
#pragma warning restore 612, 618
        }
    }
}
